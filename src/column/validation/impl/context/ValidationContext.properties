
#Validation Context Execution Properties
#Execution properties
content.suffix = /content
header.suffix = /header
test.file = //metadata.xml

#Validation Context Debug Properties
mount.point = SIARD Mount Point: 
content = Path to content: 
header = Path to header: 
metadata.xml = Path to metadata.xml: 
validation.properties = ValidationProperties: 
metadata.xml.fis = FileInputStream metadataXMLFis: 

#Schema Extraction Properties
metadata.xml.prefix = pre
table.xsd.prefix = xs

#XPath
xpath.to.data = /child::pre:siardArchive/child::pre:schemas/child::pre:schema
xpath.to.schema = /child::xs:schema/child::xs:complexType[@name="rowType"]/child::xs:sequence/child::xs:element
#xpath.to.schema = /child::xs:schema/child::xs:complexType[@name="rowType"]

#Schema Attributes
name = name
type = type
min = minOccurs
max = maxOccurs

#AttributeCountValidator
attribute.count.validator.title = Attribute Count Validator Plugin
attribute.count.validator.criterion = Number of Attributes: 
attribute.count.validator.passed = \ (OK)
attribute.count.validator.failed = \ (Failed)
attribute.count.validator.test.passed = Attribute Count Validation successfully passed
attribute.count.validator.test.failed = Attribute Count Validation failed
attribute.count.validator.end = ----

#AttributeOccurenceValidator
attribute.occurrence.validator.title = Attribute Occurrence Validator Plugin
attribute.occurrence.validator.criterion = Number of Attributes:
attribute.occurrence.validator.nullable = nullable\=
attribute.occurrence.validator.min.occurs = minOccurs\=
attribute.occurrence.validator.passed = \ (OK)
attribute.occurrence.validator.failed = \ (Failed)
attribute.occurrence.validator.test.passed = Attribute Count Validation successfully passed
attribute.occurrence.validator.test.failed = Attribute Count Validation failed
attribute.occurrence.validator.end = ----